services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: pavitra-mysql
    restart: unless-stopped
    command:
      - --default-authentication-plugin=mysql_native_password
      - --innodb-buffer-pool-size=512M
      - --innodb-log-file-size=256M
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${DB_NAME:-pavitra_trading}
      MYSQL_USER: ${DB_USER:-pavitra_app}
      MYSQL_PASSWORD: ${DB_PASSWORD:-app123}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      pavitra-network:
        aliases:
          - mysql

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pavitra-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      pavitra-network:
        aliases:
          - redis

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: pavitra-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-admin123}
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      pavitra-network:
        aliases:
          - rabbitmq

  # RabbitMQ Setup Service (runs once)
  rabbitmq-setup:
    build:
      context: .
      dockerfile: Dockerfile.setup
    container_name: pavitra-rabbitmq-setup
    profiles: ["setup"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - pavitra-network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:

networks:
  pavitra-network:
    name: pavitra-micro_pavitra-network
    driver: bridge
