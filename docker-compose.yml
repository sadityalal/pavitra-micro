services:
  auth-service:
    build:
      context: .
      dockerfile: backend/auth/Dockerfile
    container_name: pavitra-auth
    restart: unless-stopped
    ports:
      - "${AUTH_SERVICE_PORT}:8001"
    env_file:
      - .env
    environment:
      SERVICE_NAME: auth
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pavitra-network

  product-service:
    build:
      context: .
      dockerfile: backend/product/Dockerfile
    container_name: pavitra-product
    restart: unless-stopped
    ports:
      - "${PRODUCT_SERVICE_PORT}:8002"
    env_file:
      - .env
    environment:
      SERVICE_NAME: product
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pavitra-network

  order-service:
    build:
      context: .
      dockerfile: backend/order/Dockerfile
    container_name: pavitra-order
    restart: unless-stopped
    ports:
      - "${ORDER_SERVICE_PORT}:8003"
    env_file:
      - .env
    environment:
      SERVICE_NAME: order
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pavitra-network

  user-service:
    build:
      context: .
      dockerfile: backend/user/Dockerfile
    container_name: pavitra-user
    restart: unless-stopped
    ports:
      - "${USER_SERVICE_PORT}:8004"
    env_file:
      - .env
    environment:
      SERVICE_NAME: user
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pavitra-network

  payment-service:
    build:
      context: .
      dockerfile: backend/payment/Dockerfile
    container_name: pavitra-payment
    restart: unless-stopped
    ports:
      - "${PAYMENT_SERVICE_PORT}:8005"
    env_file:
      - .env
    environment:
      SERVICE_NAME: payment
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pavitra-network

  notification-service:
    build:
      context: .
      dockerfile: backend/notification/Dockerfile
    container_name: pavitra-notification
    restart: unless-stopped
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:8006"
    env_file:
      - .env
    environment:
      SERVICE_NAME: notification
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pavitra-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pavitra-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    depends_on:
      - auth-service
      - product-service
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs
    networks:
      - pavitra-network

networks:
  pavitra-network:
    external: true
    name: pavitra-micro_pavitra-network
